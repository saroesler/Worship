<?php
/**
 * This is the User controller class providing navigation and interaction functionality.
 */
class Worship_Api_Admin extends Zikula_AbstractApi
{
	/**
	 * @brief Get available admin panel links
	 *
	 * @return array array of admin links
	 */
	public function getlinks()
	{
		$links = array();
		if (SecurityUtil::checkPermission('Worship::', '::', ACCESS_ADMIN)) {
			$links[] = array(
				'url'=> ModUtil::url('Worship', 'admin', 'main'),
				'text'  => $this->__('Main'),
				'title' => $this->__('Main'),
				'class' => 'z-icon-es-config',
			);
		}
		
		if (SecurityUtil::checkPermission('Worship::', '::', ACCESS_MODERATE)) {
			$links[] = array(
				'url'=> ModUtil::url('Worship', 'admin', 'ChurchesView'),
				'text'  => $this->__('Churches'),
				'title' => $this->__('manage and create churches'),
				'class' => 'z-icon-es-display',
			);
		}
		
		if (SecurityUtil::checkPermission('Worship::', '::', ACCESS_MODERATE)) {
			$links[] = array(
				'url'=> ModUtil::url('Worship', 'admin', 'special_days'),
				'text'  => $this->__('Special worships'),
				'title' => $this->__('manage and create special worships'),
				'class' => 'z-icon-es-display',
			);
		}
		
		if (SecurityUtil::checkPermission('Worship::', '::', ACCESS_MODERATE)) {
			$links[] = array(
				'url'=> ModUtil::url('Worship', 'admin', 'Daily_worships'),
				'text'  => $this->__('Daily worships'),
				'title' => $this->__('manage and create daily worships'),
				'class' => 'z-icon-es-display',
			);
		}
		
		if (SecurityUtil::checkPermission('Worship::', '::', ACCESS_MODERATE)) {
			$links[] = array(
				'url'=> ModUtil::url('Worship', 'admin', 'Help'),
				'text'  => $this->__('Help'),
				'title' => $this->__('Here you can get help.'),
				'class' => 'z-icon-es-help',
			);
		}
		
		return $links;
	}
	
	public function getChurchSelector($args)
	{
		$churches = $this->entityManager->getRepository('Worship_Entity_Church')->findBy(array());
		
		$list = "<select name=\"{$args['name']}\">";
		
		foreach($churches as $church)
		{
			$list .="<option value=\"{$church->getCid()}\"> {$church->getName()} </option>";
		}
		$list .="</select>";
		return $list;
	}
	
	public function getChurchNameById($args)
	{
		$church = $this->entityManager->find('Worship_Entity_Church', $args['id']);
		return $church->getName();
	}
	
	public function getDateById($args)
	{
		$date = $this->entityManager->find('Worship_Entity_Day', $args['id']);
		return $date->getwDateFormatted();
	}
	
	public function getDayNameById($args)
	{
		if($args['short']==true)
		else
			switch($args['id'])
			{
				case 0: $day = 'Sonntag';break;
				case 1: $day = 'Montag';break;
				case 2: $day = 'Dinstag';break;
				case 3: $day = 'Mittwoch';break;
				case 4: $day = 'Donnerstag';break;
				case 5: $day = 'Fretag';break;
				case 6: $day = 'Samstag';break;
			}
		return $day;
	}
	
	public function getWeekdaySelector($args)
	{
		$weekdays = array('Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag');
		
		$list = "<select name=\"{$args['name']}\">";
		$count = 0;
		foreach($weekdays as $weekday)
		{
			$list .="<option value=\"{$count}\"> {$weekday} </option>";
			$count ++;
		}
		$list .="</select>";
		return $list;
	}
}
